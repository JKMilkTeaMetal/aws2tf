type is required eg:  -t aws_vpc
setting to all
region set from aws cli as eu-west-2
args.merge=False
Using region: eu-west-2 account: 566972129213

skipping terraform init
No merge - removing terraform.tfstate* and aws_*.tf *.out
---<><> None
len all_types=1289
599 of 701 type=aws_glue_security_configuration
600 of 701 type=aws_glue_trigger
601 of 701 type=aws_glue_user_defined_function
WARNING: Not supported by aws2tf currently : aws_glue_user_defined_function
602 of 701 type=aws_glue_workflow
No aws_glue_workflow found -empty response
603 of 701 type=aws_grafana_license_association
WARNING: Terraform cannot import type: aws_grafana_license_association
604 of 701 type=aws_grafana_role_association
WARNING: Terraform cannot import type: aws_grafana_role_association
605 of 701 type=aws_grafana_workspace
606 of 701 type=aws_grafana_workspace_api_key
WARNING: Terraform cannot import type: aws_grafana_workspace_api_key
607 of 701 type=aws_grafana_workspace_saml_configuration
WARNING: aws_grafana_workspace_saml_configuration cannot have null id must pass parameter workspaceId
608 of 701 type=aws_guardduty_detector
ERROR: getresource TypeError: ['0eb6957e306c7dd13cddce040ab7444a'] key=DetectorId type=aws_guardduty_detector list_detectors
609 of 701 type=aws_guardduty_detector_feature
WARNING: Terraform cannot import type: aws_guardduty_detector_feature
610 of 701 type=aws_guardduty_filter
WARNING: aws_guardduty_filter cannot have null id must pass parameter DetectorId
611 of 701 type=aws_guardduty_invite_accepter
WARNING: Not supported by aws2tf currently : aws_guardduty_invite_accepter
612 of 701 type=aws_guardduty_ipset
WARNING: aws_guardduty_ipset cannot have null id must pass parameter DetectorId
613 of 701 type=aws_guardduty_member
WARNING: aws_guardduty_member cannot have null id must pass parameter DetectorId
614 of 701 type=aws_guardduty_organization_admin_account
No aws_guardduty_organization_admin_account found -empty response
615 of 701 type=aws_guardduty_organization_configuration
WARNING: Not supported by aws2tf currently : aws_guardduty_organization_configuration
616 of 701 type=aws_guardduty_organization_configuration_feature
WARNING: Terraform cannot import type: aws_guardduty_organization_configuration_feature
617 of 701 type=aws_guardduty_publishing_destination
WARNING: aws_guardduty_publishing_destination cannot have null id must pass parameter DetectorId
618 of 701 type=aws_guardduty_threatintelset
WARNING: aws_guardduty_threatintelset cannot have null id must pass parameter DetectorId
619 of 701 type=aws_iam_access_key
620 of 701 type=aws_iam_account_alias
No aws_iam_account_alias found -empty response
621 of 701 type=aws_iam_account_password_policy
WARNING: Terraform cannot import type: aws_iam_account_password_policy
622 of 701 type=aws_iam_group
623 of 701 type=aws_iam_group_membership
WARNING: Terraform cannot import type: aws_iam_group_membership
624 of 701 type=aws_iam_group_policy
WARNING: aws_iam_group_policy cannot have null id must pass parameter UserName
625 of 701 type=aws_iam_group_policy_attachment
WARNING: aws_iam_group_policy_attachment cannot have null id must pass parameter GroupName,PolicyName
626 of 701 type=aws_iam_openid_connect_provider
627 of 701 type=aws_iam_policy_attachment
WARNING: Terraform cannot import type: aws_iam_policy_attachment
628 of 701 type=aws_iam_saml_provider
No aws_iam_saml_provider found -empty response
629 of 701 type=aws_iam_security_token_service_preferences
WARNING: Terraform cannot import type: aws_iam_security_token_service_preferences
630 of 701 type=aws_iam_server_certificate
No aws_iam_server_certificate found -empty response
631 of 701 type=aws_iam_service_linked_role
632 of 701 type=aws_iam_service_specific_credential
No aws_iam_service_specific_credential found -empty response
633 of 701 type=aws_iam_signing_certificate
No aws_iam_signing_certificate found -empty response
634 of 701 type=aws_iam_user_group_membership
WARNING: aws_iam_user_group_membership cannot have null id must pass parameter GroupName
635 of 701 type=aws_iam_user_login_profile
WARNING: aws_iam_user_login_profile cannot have null id must pass parameter UserName
636 of 701 type=aws_iam_user_policy
WARNING: aws_iam_user_policy cannot have null id must pass parameter UserName
637 of 701 type=aws_iam_user_policy_attachment
WARNING: aws_iam_user_policy_attachment cannot have null id must pass parameter UserName,PolicyName
638 of 701 type=aws_iam_user_ssh_key
No aws_iam_user_ssh_key found -empty response
639 of 701 type=aws_iam_virtual_mfa_device
640 of 701 type=aws_identitystore_group
WARNING: aws_identitystore_group cannot have null id must pass parameter IdentityStoreId
641 of 701 type=aws_identitystore_group_membership
WARNING: aws_identitystore_group_membership cannot have null id must pass parameter IdentityStoreId,GroupId
642 of 701 type=aws_identitystore_user
WARNING: aws_identitystore_user cannot have null id must pass parameter IdentityStoreId
643 of 701 type=aws_imagebuilder_component

ERROR: in call_boto3 clfn=imagebuilder descfn=list_components
topkey=Components id=None
e=KeyError('Components') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_components
topkey=Components id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_component id=None
644 of 701 type=aws_imagebuilder_container_recipe

ERROR: in call_boto3 clfn=imagebuilder descfn=list_container_recipes
topkey=ContainerRecipes id=None
e=KeyError('ContainerRecipes') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_container_recipes
topkey=ContainerRecipes id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_container_recipe id=None
645 of 701 type=aws_imagebuilder_distribution_configuration

ERROR: in call_boto3 clfn=imagebuilder descfn=list_distribution_configurations
topkey=DistributionConfigurations id=None
e=KeyError('DistributionConfigurations') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_distribution_configurations
topkey=DistributionConfigurations id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_distribution_configuration id=None
646 of 701 type=aws_imagebuilder_image

ERROR: in call_boto3 clfn=imagebuilder descfn=list_images
topkey=Images id=None
e=KeyError('Images') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_images
topkey=Images id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_image id=None
647 of 701 type=aws_imagebuilder_image_pipeline

ERROR: in call_boto3 clfn=imagebuilder descfn=list_image_pipelines
topkey=ImagePipelines id=None
e=KeyError('ImagePipelines') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_image_pipelines
topkey=ImagePipelines id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_image_pipeline id=None
648 of 701 type=aws_imagebuilder_image_recipe

ERROR: in call_boto3 clfn=imagebuilder descfn=list_image_recipes
topkey=ImageRecipes id=None
e=KeyError('ImageRecipes') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_image_recipes
topkey=ImageRecipes id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_image_recipe id=None
649 of 701 type=aws_imagebuilder_infrastructure_configuration

ERROR: in call_boto3 clfn=imagebuilder descfn=list_infrastructure_configurations
topkey=InfrastructureConfigurations id=None
e=KeyError('InfrastructureConfigurations') [e1]  common.py 933

ERROR: in getresource clfn=imagebuilder descfn=list_infrastructure_configurations
topkey=InfrastructureConfigurations id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_imagebuilder_infrastructure_configuration id=None
650 of 701 type=aws_inspector2_delegated_admin_account
WARNING: Not supported by aws2tf currently : aws_inspector2_delegated_admin_account
651 of 701 type=aws_inspector2_enabler
WARNING: Terraform cannot import type: aws_inspector2_enabler
652 of 701 type=aws_inspector2_member_association
WARNING: Not supported by aws2tf currently : aws_inspector2_member_association
653 of 701 type=aws_inspector2_organization_configuration
WARNING: Terraform cannot import type: aws_inspector2_organization_configuration
654 of 701 type=aws_inspector_assessment_target
WARNING: Not supported by aws2tf currently : aws_inspector_assessment_target
655 of 701 type=aws_inspector_assessment_template
WARNING: Not supported by aws2tf currently : aws_inspector_assessment_template
656 of 701 type=aws_inspector_resource_group
WARNING: Terraform cannot import type: aws_inspector_resource_group
657 of 701 type=aws_internet_gateway_attachment
WARNING: Not supported by aws2tf currently : aws_internet_gateway_attachment
658 of 701 type=aws_internetmonitor_monitor
No aws_internetmonitor_monitor found -empty response
659 of 701 type=aws_iot_authorizer
WARNING: Not supported by aws2tf currently : aws_iot_authorizer
660 of 701 type=aws_iot_billing_group
WARNING: Not supported by aws2tf currently : aws_iot_billing_group
661 of 701 type=aws_iot_ca_certificate
WARNING: Terraform cannot import type: aws_iot_ca_certificate
662 of 701 type=aws_iot_certificate
WARNING: Terraform cannot import type: aws_iot_certificate
663 of 701 type=aws_iot_domain_configuration
WARNING: Not supported by aws2tf currently : aws_iot_domain_configuration
664 of 701 type=aws_iot_event_configurations
WARNING: Not supported by aws2tf currently : aws_iot_event_configurations
665 of 701 type=aws_iot_indexing_configuration
WARNING: Terraform cannot import type: aws_iot_indexing_configuration
666 of 701 type=aws_iot_logging_options
WARNING: Terraform cannot import type: aws_iot_logging_options
667 of 701 type=aws_iot_policy
No aws_iot_policy found -empty response
668 of 701 type=aws_iot_policy_attachment
WARNING: Terraform cannot import type: aws_iot_policy_attachment
669 of 701 type=aws_iot_provisioning_template
WARNING: Not supported by aws2tf currently : aws_iot_provisioning_template
670 of 701 type=aws_iot_role_alias
WARNING: Not supported by aws2tf currently : aws_iot_role_alias
671 of 701 type=aws_iot_thing
No aws_iot_thing found -empty response
672 of 701 type=aws_iot_thing_group
WARNING: Not supported by aws2tf currently : aws_iot_thing_group
673 of 701 type=aws_iot_thing_group_membership
WARNING: Not supported by aws2tf currently : aws_iot_thing_group_membership
674 of 701 type=aws_iot_thing_principal_attachment
WARNING: Terraform cannot import type: aws_iot_thing_principal_attachment
675 of 701 type=aws_iot_thing_type
WARNING: Not supported by aws2tf currently : aws_iot_thing_type
676 of 701 type=aws_iot_topic_rule
No aws_iot_topic_rule found -empty response
677 of 701 type=aws_iot_topic_rule_destination
WARNING: Not supported by aws2tf currently : aws_iot_topic_rule_destination
678 of 701 type=aws_ivs_channel
WARNING: Not supported by aws2tf currently : aws_ivs_channel
679 of 701 type=aws_ivs_playback_key_pair
WARNING: Not supported by aws2tf currently : aws_ivs_playback_key_pair
680 of 701 type=aws_ivs_recording_configuration
WARNING: Not supported by aws2tf currently : aws_ivs_recording_configuration
681 of 701 type=aws_ivschat_logging_configuration

ERROR: in call_boto3 clfn=ivschat descfn=list_logging_configurations
topkey=LoggingConfigurations id=None
e=EndpointConnectionError('Could not connect to the endpoint URL: "https://ivschat.eu-west-2.amazonaws.com/ListLoggingConfigurations"') [e1]  common.py 932

ERROR: in getresource clfn=ivschat descfn=list_logging_configurations
topkey=LoggingConfigurations id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_ivschat_logging_configuration id=None
682 of 701 type=aws_ivschat_room

ERROR: in call_boto3 clfn=ivschat descfn=list_rooms
topkey=Rooms id=None
e=EndpointConnectionError('Could not connect to the endpoint URL: "https://ivschat.eu-west-2.amazonaws.com/ListRooms"') [e1]  common.py 932

ERROR: in getresource clfn=ivschat descfn=list_rooms
topkey=Rooms id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_ivschat_room id=None
683 of 701 type=aws_kendra_data_source
WARNING: aws_kendra_data_source cannot have null id must pass parameter IndexId
684 of 701 type=aws_kendra_experience
WARNING: aws_kendra_experience cannot have null id must pass parameter IndexId
685 of 701 type=aws_kendra_faq
WARNING: aws_kendra_faq cannot have null id must pass parameter IndexId
686 of 701 type=aws_kendra_index

ERROR: in call_boto3 clfn=kendra descfn=list_indices
topkey=Indices id=None
e=KeyError('Indices') [e1]  common.py 933

ERROR: in getresource clfn=kendra descfn=list_indices
topkey=Indices id=None
e=TypeError('can only concatenate str (not "type") to str') [e1]  common.py 624
e=TypeError('can only concatenate str (not "type") to str')
<class 'TypeError'> common.py 156
--->> Could not get resource aws_kendra_index id=None
687 of 701 type=aws_kendra_query_suggestions_block_list
WARNING: aws_kendra_query_suggestions_block_list cannot have null id must pass parameter IndexId
688 of 701 type=aws_kendra_thesaurus
WARNING: aws_kendra_thesaurus cannot have null id must pass parameter IndexId
689 of 701 type=aws_keyspaces_keyspace
WARNING: Not supported by aws2tf currently : aws_keyspaces_keyspace
690 of 701 type=aws_keyspaces_table
WARNING: aws_keyspaces_table cannot have null id must pass parameter keyspaceName
691 of 701 type=aws_kinesis_analytics_application
No aws_kinesis_analytics_application found -empty response
692 of 701 type=aws_kinesis_firehose_delivery_stream
ERROR: getresource TypeError: ['terraform-kinesis-firehose-extended-s3-test-stream'] key=DeliveryStreamName type=aws_kinesis_firehose_delivery_stream list_delivery_streams
693 of 701 type=aws_kinesis_stream_consumer
WARNING: aws_kinesis_stream_consumer cannot have null id must pass parameter StreamARN
694 of 701 type=aws_kinesis_video_stream
WARNING: Not supported by aws2tf currently : aws_kinesis_video_stream
695 of 701 type=aws_kinesisanalyticsv2_application
No aws_kinesisanalyticsv2_application found -empty response
696 of 701 type=aws_kinesisanalyticsv2_application_snapshot
WARNING: aws_kinesisanalyticsv2_application_snapshot cannot have null id must pass parameter ApplicationName
697 of 701 type=aws_kms_ciphertext
WARNING: Terraform cannot import type: aws_kms_ciphertext
698 of 701 type=aws_kms_custom_key_store
No aws_kms_custom_key_store found -empty response
699 of 701 type=aws_kms_external_key
WARNING: Not supported by aws2tf currently : aws_kms_external_key
700 of 701 type=aws_kms_grant
WARNING: aws_kms_grant cannot have null id must pass parameter KeyId
701 of 701 type=aws_kms_key_policy
WARNING: aws_kms_key_policy cannot have null id must pass parameter KeyId
Terraform Plan Loop ... 
terraform plan -generate-config-out=resources.out -out tfplan -json | jq . > plan1.json
fix tf files.....
split file:resources.out
add_dependancy: aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO
add_dependancy: aws_iam_group_policy.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO
add_dependancy: aws_iam_user_group_membership.ServCatEndUsers
add_dependancy: aws_iam_group_policy.ServCatEndUsers
add_dependancy: aws_iam_user_group_membership.assume_test_roles
add_dependancy: aws_iam_group_policy.assume_test_roles
add_dependancy: aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380
add_dependancy: aws_iam_user_group_membership.QSReaders
add_dependancy: aws_iam_group_policy.QSReaders
add_dependancy: aws_iam_role.AmazonGrafanaServiceRole-ztrtrZYS5
add_dependancy: aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N
add_dependancy: aws_iam_group_policy.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N
Detected Dependancies -----------------------
aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO
aws_iam_group_policy.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO
aws_iam_user_group_membership.ServCatEndUsers
aws_iam_group_policy.ServCatEndUsers
aws_iam_user_group_membership.assume_test_roles
aws_iam_group_policy.assume_test_roles
aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380
aws_iam_user_group_membership.QSReaders
aws_iam_group_policy.QSReaders
aws_iam_role.AmazonGrafanaServiceRole-ztrtrZYS5
aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N
aws_iam_group_policy.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N
Empty response for aws_iam_user_group_membership id=SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO returning
Empty response for aws_iam_user_group_membership id=ServCatEndUsers returning
Empty response for aws_iam_group_policy id=ServCatEndUsers returning
Empty response for aws_iam_user_group_membership id=assume_test_roles returning
Empty response for aws_iam_group_policy id=assume_test_roles returning
WARNING: key is not enabled or is managed by AWS
{'KeyMetadata': {'AWSAccountId': '566972129213', 'KeyId': 'cefa9ce5-d71d-48eb-9a72-6dbcabbcd380', 'Arn': 'arn:aws:kms:eu-west-2:566972129213:key/cefa9ce5-d71d-48eb-9a72-6dbcabbcd380', 'CreationDate': datetime.datetime(2021, 7, 9, 9, 43, 4, 620000, tzinfo=tzlocal()), 'Enabled': False, 'Description': '', 'KeyUsage': 'ENCRYPT_DECRYPT', 'KeyState': 'Disabled', 'Origin': 'AWS_KMS', 'KeyManager': 'CUSTOMER', 'CustomerMasterKeySpec': 'SYMMETRIC_DEFAULT', 'KeySpec': 'SYMMETRIC_DEFAULT', 'EncryptionAlgorithms': ['SYMMETRIC_DEFAULT'], 'MultiRegion': False}, 'ResponseMetadata': {'RequestId': '7f320adf-14fc-4aa7-bd4a-22f4125d7314', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': '7f320adf-14fc-4aa7-bd4a-22f4125d7314', 'cache-control': 'no-cache, no-store, must-revalidate, private', 'expires': '0', 'pragma': 'no-cache', 'date': 'Sat, 04 May 2024 18:23:13 GMT', 'content-type': 'application/x-amz-json-1.1', 'content-length': '475', 'connection': 'keep-alive'}, 'RetryAttempts': 0}}
Empty response for aws_iam_group_policy id=QSReaders returning
Empty response for aws_iam_user_group_membership id=SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N returning
Terraform Plan Loop ... 
terraform plan -generate-config-out=resources.out -out tfplan -json | jq . > plan1.json
fix tf files.....
split file:resources.out
aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO is False
aws_iam_user_group_membership.ServCatEndUsers is False
aws_iam_user_group_membership.assume_test_roles is False
aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 is False
aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N is False
----------- Completed 1 dependancy check loops --------------
OLD= 
NEW= aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO aws_iam_user_group_membership.ServCatEndUsers aws_iam_user_group_membership.assume_test_roles aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N 
Empty response for aws_iam_user_group_membership id=SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO returning
Empty response for aws_iam_user_group_membership id=ServCatEndUsers returning
Empty response for aws_iam_user_group_membership id=assume_test_roles returning
WARNING: key is not enabled or is managed by AWS
{'KeyMetadata': {'AWSAccountId': '566972129213', 'KeyId': 'cefa9ce5-d71d-48eb-9a72-6dbcabbcd380', 'Arn': 'arn:aws:kms:eu-west-2:566972129213:key/cefa9ce5-d71d-48eb-9a72-6dbcabbcd380', 'CreationDate': datetime.datetime(2021, 7, 9, 9, 43, 4, 620000, tzinfo=tzlocal()), 'Enabled': False, 'Description': '', 'KeyUsage': 'ENCRYPT_DECRYPT', 'KeyState': 'Disabled', 'Origin': 'AWS_KMS', 'KeyManager': 'CUSTOMER', 'CustomerMasterKeySpec': 'SYMMETRIC_DEFAULT', 'KeySpec': 'SYMMETRIC_DEFAULT', 'EncryptionAlgorithms': ['SYMMETRIC_DEFAULT'], 'MultiRegion': False}, 'ResponseMetadata': {'RequestId': 'ba6db11a-b06b-4c6f-9566-b94ef5936eba', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': 'ba6db11a-b06b-4c6f-9566-b94ef5936eba', 'cache-control': 'no-cache, no-store, must-revalidate, private', 'expires': '0', 'pragma': 'no-cache', 'date': 'Sat, 04 May 2024 18:23:24 GMT', 'content-type': 'application/x-amz-json-1.1', 'content-length': '475', 'connection': 'keep-alive'}, 'RetryAttempts': 0}}
Empty response for aws_iam_user_group_membership id=SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N returning
Terraform Plan Loop ... 
terraform plan -generate-config-out=resources.out -out tfplan -json | jq . > plan1.json
fix tf files.....
split file:resources.out
aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO is False
aws_iam_user_group_membership.ServCatEndUsers is False
aws_iam_user_group_membership.assume_test_roles is False
aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 is False
aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N is False
----------- Completed 2 dependancy check loops --------------
OLD= aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO aws_iam_user_group_membership.ServCatEndUsers aws_iam_user_group_membership.assume_test_roles aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N 
NEW= aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO aws_iam_user_group_membership.ServCatEndUsers aws_iam_user_group_membership.assume_test_roles aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N 
ERROR: No change/progress in dependancies exiting
ERROR: Not found aws_iam_user_group_membership.SQSWithSNSSample-MyRDMessageQueueGroup-1S3Z5068ZG4UO - check if this resource still exists in AWS
ERROR: Also check what resource is using it - grep the *.tf files in the generated/tf.* subdirectory
ERROR: Not found aws_iam_user_group_membership.ServCatEndUsers - check if this resource still exists in AWS
ERROR: Also check what resource is using it - grep the *.tf files in the generated/tf.* subdirectory
ERROR: Not found aws_iam_user_group_membership.assume_test_roles - check if this resource still exists in AWS
ERROR: Also check what resource is using it - grep the *.tf files in the generated/tf.* subdirectory
ERROR: Not found aws_kms_key.cefa9ce5-d71d-48eb-9a72-6dbcabbcd380 - check if this resource still exists in AWS
ERROR: Also check what resource is using it - grep the *.tf files in the generated/tf.* subdirectory
ERROR: Not found aws_iam_user_group_membership.SQSWithSNSSample-MyPublishTopicGroup-1H0BQ4A0F3U7N - check if this resource still exists in AWS
ERROR: Also check what resource is using it - grep the *.tf files in the generated/tf.* subdirectory
